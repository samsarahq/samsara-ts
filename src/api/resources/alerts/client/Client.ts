/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments.js";
import * as core from "../../../../core/index.js";
import { Configurations } from "../resources/configurations/client/Client.js";
import { Incidents } from "../resources/incidents/client/Client.js";

export declare namespace Alerts {
    export interface Options {
        environment?: core.Supplier<environments.SamsaraApiEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-Samsara-Version header */
        version?: "2025-05-12";
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class Alerts {
    protected readonly _options: Alerts.Options;
    protected _configurations: Configurations | undefined;
    protected _incidents: Incidents | undefined;

    constructor(_options: Alerts.Options = {}) {
        this._options = _options;
    }

    public get configurations(): Configurations {
        return (this._configurations ??= new Configurations(this._options));
    }

    public get incidents(): Incidents {
        return (this._incidents ??= new Incidents(this._options));
    }
}
