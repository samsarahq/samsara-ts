/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Samsara from "../index.js";

/**
 * Information about a DVIR.
 */
export interface Dvir {
    authorSignature?: Samsara.DvirAuthorSignature;
    /** Time when driver signed and completed this DVIR. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`. */
    endTime?: string;
    /** Unique Samsara ID for the DVIR. */
    id: string;
    licensePlate?: Samsara.DvirLicensePlate;
    location?: Samsara.DvirLocation;
    mechanicNotes?: Samsara.DvirMechanicNotes;
    odometerMeters?: Samsara.DvirOdometerMeters;
    /** The condition of vehicle on which DVIR was done. Valid values: `safe`, `unsafe`, `resolved`. */
    safetyStatus?: Dvir.SafetyStatus;
    secondSignature?: Samsara.DvirSecondSignature;
    /** Time when driver began filling out this DVIR. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`. */
    startTime?: string;
    thirdSignature?: Samsara.DvirThirdSignature;
    trailer?: Samsara.DvirTrailer;
    trailerDefects?: Samsara.DvirTrailerDefects;
    /** The name of the trailer the DVIR was submitted for.  Only included for tractor+trailer DVIRs. */
    trailerName?: string;
    /** Inspection type of the DVIR. Valid values: `preTrip`, `postTrip`, `mechanic`, `unspecified`. */
    type?: Dvir.Type;
    vehicle?: Samsara.DvirVehicle;
    vehicleDefects?: Samsara.DvirVehicleDefects;
}

export namespace Dvir {
    /**
     * The condition of vehicle on which DVIR was done. Valid values: `safe`, `unsafe`, `resolved`.
     */
    export type SafetyStatus = "safe" | "unsafe" | "resolved";
    export const SafetyStatus = {
        Safe: "safe",
        Unsafe: "unsafe",
        Resolved: "resolved",
    } as const;
    /**
     * Inspection type of the DVIR. Valid values: `preTrip`, `postTrip`, `mechanic`, `unspecified`.
     */
    export type Type = "preTrip" | "postTrip" | "mechanic" | "unspecified";
    export const Type = {
        PreTrip: "preTrip",
        PostTrip: "postTrip",
        Mechanic: "mechanic",
        Unspecified: "unspecified",
    } as const;
}
