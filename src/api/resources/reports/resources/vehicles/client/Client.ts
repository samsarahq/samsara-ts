/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../../../environments.js";
import * as core from "../../../../../../core/index.js";
import { Idling } from "../resources/idling/client/Client.js";
import { FuelEnergy } from "../resources/fuelEnergy/client/Client.js";

export declare namespace Vehicles {
    export interface Options {
        environment?: core.Supplier<environments.SamsaraEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-Samsara-Version header */
        version?: "2025-05-12";
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class Vehicles {
    protected readonly _options: Vehicles.Options;
    protected _idling: Idling | undefined;
    protected _fuelEnergy: FuelEnergy | undefined;

    constructor(_options: Vehicles.Options = {}) {
        this._options = _options;
    }

    public get idling(): Idling {
        return (this._idling ??= new Idling(this._options));
    }

    public get fuelEnergy(): FuelEnergy {
        return (this._fuelEnergy ??= new FuelEnergy(this._options));
    }
}
