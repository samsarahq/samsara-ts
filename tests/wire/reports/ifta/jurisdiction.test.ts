/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../../mock-server/MockServerPool.js";
import { SamsaraApiClient } from "../../../../src/Client";

describe("Jurisdiction", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                jurisdictionReports: [
                    { jurisdiction: "GA", taxPaidLiters: 25.5, taxableMeters: 2350, totalMeters: 2350 },
                ],
                month: "January",
                quarter: "Q4",
                troubleshooting: {
                    noPurchasesFound: true,
                    unassignedFuelTypePurchases: 200,
                    unassignedFuelTypeVehicles: 2500,
                    unassignedVehiclePurchases: 2500,
                },
                year: 2021,
            },
        };
        server
            .mockEndpoint()
            .get("/fleet/reports/ifta/jurisdiction")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.reports.ifta.jurisdiction.get({
            year: 1,
        });
        expect(response).toEqual({
            data: {
                jurisdictionReports: [
                    {
                        jurisdiction: "GA",
                        taxPaidLiters: 25.5,
                        taxableMeters: 2350,
                        totalMeters: 2350,
                    },
                ],
                month: "January",
                quarter: "Q4",
                troubleshooting: {
                    noPurchasesFound: true,
                    unassignedFuelTypePurchases: 200,
                    unassignedFuelTypeVehicles: 2500,
                    unassignedVehiclePurchases: 2500,
                },
                year: 2021,
            },
        });
    });
});
