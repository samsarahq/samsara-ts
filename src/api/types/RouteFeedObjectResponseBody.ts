/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Samsara from "../index.js";

/**
 * Route feed object.
 */
export interface RouteFeedObjectResponseBody {
    changes: Samsara.RouteChangesResponseBody;
    /** The operation that was performed as part of this route update.  Valid values: `stop scheduled`, `stop en route`, `stop skipped`, `stop arrived`, `stop departed`, `stop ETA updated`, `stop arrival time updated`, `stop completion time updated`, `stop order changed`, `stop arrival prevented` */
    operation?: RouteFeedObjectResponseBody.Operation;
    route: Samsara.BaseRouteResponseObjectResponseBody;
    /** The source of this route update. Updates that are triggered by time or by the route being completed are 'automatic'.  Valid values: `automatic`, `driver`, `admin` */
    source: RouteFeedObjectResponseBody.Source;
    /** The timestamp of the route in RFC 3339 format. */
    time: string;
    /** The type of route update. The route tracking updates occur as a route is completed and stops transition from one state to another. Currently only Route Tracking updates are supported, but this will change in the future when additional types are added.  Valid values: `route tracking` */
    type: "route tracking";
}

export namespace RouteFeedObjectResponseBody {
    /**
     * The operation that was performed as part of this route update.  Valid values: `stop scheduled`, `stop en route`, `stop skipped`, `stop arrived`, `stop departed`, `stop ETA updated`, `stop arrival time updated`, `stop completion time updated`, `stop order changed`, `stop arrival prevented`
     */
    export type Operation =
        | "stop scheduled"
        | "stop en route"
        | "stop skipped"
        | "stop arrived"
        | "stop departed"
        | "stop ETA updated"
        | "stop arrival time updated"
        | "stop completion time updated"
        | "stop order changed"
        | "stop arrival prevented";
    export const Operation = {
        StopScheduled: "stop scheduled",
        StopEnRoute: "stop en route",
        StopSkipped: "stop skipped",
        StopArrived: "stop arrived",
        StopDeparted: "stop departed",
        StopEtaUpdated: "stop ETA updated",
        StopArrivalTimeUpdated: "stop arrival time updated",
        StopCompletionTimeUpdated: "stop completion time updated",
        StopOrderChanged: "stop order changed",
        StopArrivalPrevented: "stop arrival prevented",
    } as const;
    /**
     * The source of this route update. Updates that are triggered by time or by the route being completed are 'automatic'.  Valid values: `automatic`, `driver`, `admin`
     */
    export type Source = "automatic" | "driver" | "admin";
    export const Source = {
        Automatic: "automatic",
        Driver: "driver",
        Admin: "admin",
    } as const;
}
