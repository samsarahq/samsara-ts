/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Samsara from "../index.js";

export interface UploadedMediaObjectResponseBody {
    /** Timestamp, in RFC 3339 format, at which the media item was made available. Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00 */
    availableAtTime: string;
    /**  An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). */
    endTime: string;
    /** Input type for this media.  Valid values: `dashcamForwardFacing`, `dashcamInwardFacing`, `analog1` */
    input: UploadedMediaObjectResponseBody.Input;
    /** Type of media.  Valid values: `image`, `video` */
    mediaType: UploadedMediaObjectResponseBody.MediaType;
    /**  A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). */
    startTime: string;
    /** Trigger reason for this media capture.  Valid values: `api`, `panicButton`, `periodicStill`, `rfidEvent`, `safetyEvent`, `tripEndStill`, `tripStartStill`, `videoRetrieval` */
    triggerReason: UploadedMediaObjectResponseBody.TriggerReason;
    urlInfo?: Samsara.UrlInfoObjectResponseBody;
    /** Vehicle ID for which this media was captured. Examples: 1234 */
    vehicleId: string;
}

export namespace UploadedMediaObjectResponseBody {
    /**
     * Input type for this media.  Valid values: `dashcamForwardFacing`, `dashcamInwardFacing`, `analog1`
     */
    export type Input = "dashcamForwardFacing" | "dashcamInwardFacing" | "analog1";
    export const Input = {
        DashcamForwardFacing: "dashcamForwardFacing",
        DashcamInwardFacing: "dashcamInwardFacing",
        Analog1: "analog1",
    } as const;
    /**
     * Type of media.  Valid values: `image`, `video`
     */
    export type MediaType = "image" | "video";
    export const MediaType = {
        Image: "image",
        Video: "video",
    } as const;
    /**
     * Trigger reason for this media capture.  Valid values: `api`, `panicButton`, `periodicStill`, `rfidEvent`, `safetyEvent`, `tripEndStill`, `tripStartStill`, `videoRetrieval`
     */
    export type TriggerReason =
        | "api"
        | "panicButton"
        | "periodicStill"
        | "rfidEvent"
        | "safetyEvent"
        | "tripEndStill"
        | "tripStartStill"
        | "videoRetrieval";
    export const TriggerReason = {
        Api: "api",
        PanicButton: "panicButton",
        PeriodicStill: "periodicStill",
        RfidEvent: "rfidEvent",
        SafetyEvent: "safetyEvent",
        TripEndStill: "tripEndStill",
        TripStartStill: "tripStartStill",
        VideoRetrieval: "videoRetrieval",
    } as const;
}
