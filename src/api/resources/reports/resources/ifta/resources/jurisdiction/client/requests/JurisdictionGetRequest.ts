/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SamsaraApi from "../../../../../../../../index.js";

/**
 * @example
 *     {
 *         year: 1
 *     }
 */
export interface JurisdictionGetRequest {
    /**
     *  The year of the requested IFTA report summary. Must be provided with a month or quarter param. Example: `year=2021`
     */
    year: number;
    /**
     *  The month of the requested IFTA report summary. Can not be provided with the quarter param. Example: `month=January`  Valid values: `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`
     */
    month?: SamsaraApi.reports.ifta.JurisdictionGetRequestMonth;
    /**
     *  The quarter of the requested IFTA report summary. Can not be provided with the month param. Q1: January, February, March. Q2: April, May, June. Q3: July, August, September. Q4: October, November, December. Example: `quarter=Q1`  Valid values: `Q1`, `Q2`, `Q3`, `Q4`
     */
    quarter?: SamsaraApi.reports.ifta.JurisdictionGetRequestQuarter;
    /**
     *  A filter on the data based on this comma-separated list of jurisdictions. Example: `jurisdictions=GA`
     */
    jurisdictions?: string;
    /**
     *  A filter on the data based on this comma-separated list of IFTA fuel types. Example: `fuelType=Diesel`  Valid values: `Unspecified`, `A55`, `Biodiesel`, `CompressedNaturalGas`, `Diesel`, `E85`, `Electricity`, `Ethanol`, `Gasohol`, `Gasoline`, `Hydrogen`, `LiquifiedNaturalGas`, `M85`, `Methanol`, `Propane`, `Other`
     */
    fuelType?: SamsaraApi.reports.ifta.JurisdictionGetRequestFuelType;
    /**
     *  A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`
     */
    vehicleIds?: string;
    /**
     *  A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`
     */
    tagIds?: string;
    /**
     *  A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`
     */
    parentTagIds?: string;
}
