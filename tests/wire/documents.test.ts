/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SamsaraApiClient } from "../../src/Client";

describe("Documents", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = { documentTypeId: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7", driverId: "45646" };
        const rawResponseBody = {
            data: {
                conditionalFieldSections: [
                    {
                        conditionalFieldFirstIndex: 1442355805701948200,
                        conditionalFieldLastIndex: 8587732987390647000,
                        triggeringFieldIndex: 7703795094721638000,
                        triggeringFieldValue: "Optiona 1",
                    },
                ],
                createdAtTime: "1971-05-04T11:43:21Z",
                documentType: { id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7", name: "Fleet Truck List" },
                driver: { externalIds: { key: "value" }, id: "45646", name: "Driver Bob" },
                fields: [
                    { label: "Load weight", type: "photo", value: { numberValue: 123.456, stringValue: "Red Truck" } },
                ],
                id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                name: "Dropoff Slip 123",
                notes: "Missing a crate",
                route: { externalIds: { key: "value" }, id: "131313", name: "Pineapple delivery" },
                routeStop: { externalIds: { key: "value" }, id: "494123", name: "Company Warehouse #1" },
                state: "submitted",
                updatedAtTime: "1979-12-10T00:51:01Z",
                vehicle: { externalIds: { key: "value" }, id: "494123", name: "Fleet Truck #1" },
            },
        };
        server
            .mockEndpoint()
            .post("/fleet/documents")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.documents.create({
            documentTypeId: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
            driverId: "45646",
        });
        expect(response).toEqual({
            data: {
                conditionalFieldSections: [
                    {
                        conditionalFieldFirstIndex: 1442355805701948200,
                        conditionalFieldLastIndex: 8587732987390647000,
                        triggeringFieldIndex: 7703795094721638000,
                        triggeringFieldValue: "Optiona 1",
                    },
                ],
                createdAtTime: "1971-05-04T11:43:21Z",
                documentType: {
                    id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    name: "Fleet Truck List",
                },
                driver: {
                    externalIds: {
                        key: "value",
                    },
                    id: "45646",
                    name: "Driver Bob",
                },
                fields: [
                    {
                        label: "Load weight",
                        type: "photo",
                        value: {
                            numberValue: 123.456,
                            stringValue: "Red Truck",
                        },
                    },
                ],
                id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                name: "Dropoff Slip 123",
                notes: "Missing a crate",
                route: {
                    externalIds: {
                        key: "value",
                    },
                    id: "131313",
                    name: "Pineapple delivery",
                },
                routeStop: {
                    externalIds: {
                        key: "value",
                    },
                    id: "494123",
                    name: "Company Warehouse #1",
                },
                state: "submitted",
                updatedAtTime: "1979-12-10T00:51:01Z",
                vehicle: {
                    externalIds: {
                        key: "value",
                    },
                    id: "494123",
                    name: "Fleet Truck #1",
                },
            },
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                conditionalFieldSections: [
                    {
                        conditionalFieldFirstIndex: 1442355805701948200,
                        conditionalFieldLastIndex: 8587732987390647000,
                        triggeringFieldIndex: 7703795094721638000,
                        triggeringFieldValue: "Optiona 1",
                    },
                ],
                createdAtTime: "1971-05-04T11:43:21Z",
                documentType: { id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7", name: "Fleet Truck List" },
                driver: { externalIds: { key: "value" }, id: "45646", name: "Driver Bob" },
                fields: [
                    { label: "Load weight", type: "photo", value: { numberValue: 123.456, stringValue: "Red Truck" } },
                ],
                id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                name: "Dropoff Slip 123",
                notes: "Missing a crate",
                route: { externalIds: { key: "value" }, id: "131313", name: "Pineapple delivery" },
                routeStop: { externalIds: { key: "value" }, id: "494123", name: "Company Warehouse #1" },
                state: "submitted",
                updatedAtTime: "1979-12-10T00:51:01Z",
                vehicle: { externalIds: { key: "value" }, id: "494123", name: "Fleet Truck #1" },
            },
        };
        server
            .mockEndpoint()
            .get("/fleet/documents/id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.documents.get("id");
        expect(response).toEqual({
            data: {
                conditionalFieldSections: [
                    {
                        conditionalFieldFirstIndex: 1442355805701948200,
                        conditionalFieldLastIndex: 8587732987390647000,
                        triggeringFieldIndex: 7703795094721638000,
                        triggeringFieldValue: "Optiona 1",
                    },
                ],
                createdAtTime: "1971-05-04T11:43:21Z",
                documentType: {
                    id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                    name: "Fleet Truck List",
                },
                driver: {
                    externalIds: {
                        key: "value",
                    },
                    id: "45646",
                    name: "Driver Bob",
                },
                fields: [
                    {
                        label: "Load weight",
                        type: "photo",
                        value: {
                            numberValue: 123.456,
                            stringValue: "Red Truck",
                        },
                    },
                ],
                id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                name: "Dropoff Slip 123",
                notes: "Missing a crate",
                route: {
                    externalIds: {
                        key: "value",
                    },
                    id: "131313",
                    name: "Pineapple delivery",
                },
                routeStop: {
                    externalIds: {
                        key: "value",
                    },
                    id: "494123",
                    name: "Company Warehouse #1",
                },
                state: "submitted",
                updatedAtTime: "1979-12-10T00:51:01Z",
                vehicle: {
                    externalIds: {
                        key: "value",
                    },
                    id: "494123",
                    name: "Fleet Truck #1",
                },
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        server.mockEndpoint().delete("/fleet/documents/id").respondWith().statusCode(200).build();

        const response = await client.documents.delete("id");
        expect(response).toEqual(undefined);
    });
});
