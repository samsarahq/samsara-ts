/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { SamsaraApiClient } from "../../../src/Client";

describe("WorkOrders", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = { assetId: "12443" };
        const rawResponseBody = {
            data: {
                archivedAtTime: "2019-06-13T19:08:25Z",
                assetId: "12443",
                assignedUserId: "1234",
                attachments: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        processingStatus: "unknown",
                        url: "https://samsara-forms-submission-media-uploads.s3.us-west-2.amazonaws.com/123456",
                        urlExpiresAt: "2019-06-13T19:08:25Z",
                    },
                ],
                category: "Annual",
                closingNotes: "Everything was fixed without issues.",
                completedAtTime: "2019-06-13T19:08:25Z",
                createdAtTime: "2019-06-13T19:08:25Z",
                createdByUserId: "1234",
                description: "The vehicle is not starting.",
                discount: { basisPoints: 500, money: { amount: "94.01", currency: "usd" } },
                dueAtTime: "2019-06-13T19:08:25Z",
                engineHours: 91823,
                id: "5",
                items: [{ id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7", type: "DVIR" }],
                odometerMeters: 91823,
                priority: "High",
                serviceTaskInstances: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        laborHourlyCost: { amount: "94.01", currency: "usd" },
                        laborTimeMinutes: 60,
                        partsCost: { amount: "94.01", currency: "usd" },
                        serviceTaskId: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        status: "Unknown",
                    },
                ],
                status: "Assigned",
                tax: { basisPoints: 700, money: { amount: "94.01", currency: "usd" } },
                updatedAtTime: "2019-06-13T19:08:25Z",
            },
        };
        server
            .mockEndpoint()
            .post("/maintenance/work-orders")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.maintenance.workOrders.create({
            assetId: "12443",
        });
        expect(response).toEqual({
            data: {
                archivedAtTime: "2019-06-13T19:08:25Z",
                assetId: "12443",
                assignedUserId: "1234",
                attachments: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        processingStatus: "unknown",
                        url: "https://samsara-forms-submission-media-uploads.s3.us-west-2.amazonaws.com/123456",
                        urlExpiresAt: "2019-06-13T19:08:25Z",
                    },
                ],
                category: "Annual",
                closingNotes: "Everything was fixed without issues.",
                completedAtTime: "2019-06-13T19:08:25Z",
                createdAtTime: "2019-06-13T19:08:25Z",
                createdByUserId: "1234",
                description: "The vehicle is not starting.",
                discount: {
                    basisPoints: 500,
                    money: {
                        amount: "94.01",
                        currency: "usd",
                    },
                },
                dueAtTime: "2019-06-13T19:08:25Z",
                engineHours: 91823,
                id: "5",
                items: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        type: "DVIR",
                    },
                ],
                odometerMeters: 91823,
                priority: "High",
                serviceTaskInstances: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        laborHourlyCost: {
                            amount: "94.01",
                            currency: "usd",
                        },
                        laborTimeMinutes: 60,
                        partsCost: {
                            amount: "94.01",
                            currency: "usd",
                        },
                        serviceTaskId: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        status: "Unknown",
                    },
                ],
                status: "Assigned",
                tax: {
                    basisPoints: 700,
                    money: {
                        amount: "94.01",
                        currency: "usd",
                    },
                },
                updatedAtTime: "2019-06-13T19:08:25Z",
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        server.mockEndpoint().delete("/maintenance/work-orders").respondWith().statusCode(200).build();

        const response = await client.maintenance.workOrders.delete({
            id: "id",
        });
        expect(response).toEqual(undefined);
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = { id: "5" };
        const rawResponseBody = {
            data: {
                archivedAtTime: "2019-06-13T19:08:25Z",
                assetId: "12443",
                assignedUserId: "1234",
                attachments: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        processingStatus: "unknown",
                        url: "https://samsara-forms-submission-media-uploads.s3.us-west-2.amazonaws.com/123456",
                        urlExpiresAt: "2019-06-13T19:08:25Z",
                    },
                ],
                category: "Annual",
                closingNotes: "Everything was fixed without issues.",
                completedAtTime: "2019-06-13T19:08:25Z",
                createdAtTime: "2019-06-13T19:08:25Z",
                createdByUserId: "1234",
                description: "The vehicle is not starting.",
                discount: { basisPoints: 500, money: { amount: "94.01", currency: "usd" } },
                dueAtTime: "2019-06-13T19:08:25Z",
                engineHours: 91823,
                id: "5",
                items: [{ id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7", type: "DVIR" }],
                odometerMeters: 91823,
                priority: "High",
                serviceTaskInstances: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        laborHourlyCost: { amount: "94.01", currency: "usd" },
                        laborTimeMinutes: 60,
                        partsCost: { amount: "94.01", currency: "usd" },
                        serviceTaskId: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        status: "Unknown",
                    },
                ],
                status: "Assigned",
                tax: { basisPoints: 700, money: { amount: "94.01", currency: "usd" } },
                updatedAtTime: "2019-06-13T19:08:25Z",
            },
        };
        server
            .mockEndpoint()
            .patch("/maintenance/work-orders")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.maintenance.workOrders.update({
            id: "5",
        });
        expect(response).toEqual({
            data: {
                archivedAtTime: "2019-06-13T19:08:25Z",
                assetId: "12443",
                assignedUserId: "1234",
                attachments: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        processingStatus: "unknown",
                        url: "https://samsara-forms-submission-media-uploads.s3.us-west-2.amazonaws.com/123456",
                        urlExpiresAt: "2019-06-13T19:08:25Z",
                    },
                ],
                category: "Annual",
                closingNotes: "Everything was fixed without issues.",
                completedAtTime: "2019-06-13T19:08:25Z",
                createdAtTime: "2019-06-13T19:08:25Z",
                createdByUserId: "1234",
                description: "The vehicle is not starting.",
                discount: {
                    basisPoints: 500,
                    money: {
                        amount: "94.01",
                        currency: "usd",
                    },
                },
                dueAtTime: "2019-06-13T19:08:25Z",
                engineHours: 91823,
                id: "5",
                items: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        type: "DVIR",
                    },
                ],
                odometerMeters: 91823,
                priority: "High",
                serviceTaskInstances: [
                    {
                        id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        laborHourlyCost: {
                            amount: "94.01",
                            currency: "usd",
                        },
                        laborTimeMinutes: 60,
                        partsCost: {
                            amount: "94.01",
                            currency: "usd",
                        },
                        serviceTaskId: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7",
                        status: "Unknown",
                    },
                ],
                status: "Assigned",
                tax: {
                    basisPoints: 700,
                    money: {
                        amount: "94.01",
                        currency: "usd",
                    },
                },
                updatedAtTime: "2019-06-13T19:08:25Z",
            },
        });
    });
});
