/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Samsara from "../index.js";

export interface HosViolationObjectResponseBody {
    day: Samsara.HosViolationDayObjectResponseBody;
    /**
     * Description containing violation type, region, and other metadata. This field can assume the following formats for the following types:
     * californiaMealbreakMissed, restbreakMissed: "[description] ([max on duty hours] hours)"
     * cycleHoursOn, dailyDrivingHours, dailyOffDutyNonResetHours, dailyOffDutyTotalHours, dailyOnDutyHours, shiftDrivingHours, shiftHours, shiftOnDutyHours: "[description] ([region]-[max hours in duty status] hours)"
     * cycleOffHoursAfterOnDutyHours: "[description] ([region]): [minimum hours consecutive rest] hours off duty required after [max hours before consecutive rest] hours on-duty time"
     * dailyOffDutyDeferralAddToDay2Consecutive, dailyOffDutyDeferralNotPartMandatory, dailyOffDutyDeferralTwoDayDrivingLimit, dailyOffDutyDeferralTwoDayOffDuty, mandatory24HoursOffDuty: "[description] ([region])"
     * unsubmittedLogs: "Missing Driver Certification"
     */
    description: string;
    driver: Samsara.GoaDriverTinyResponseResponseBody;
    /** Duration the driver was in violation in milliseconds. This is the time between the time the driver starts being in violation until the end of the time window for violations that have one (e.g. `shiftDrivingHours`) or until the end of the day. The duration of some violations may cover the whole day (e.g. `unsubmittedLogs`). */
    durationMs: number;
    /** The string value of the violation type.  Valid values: `NONE`, `californiaMealbreakMissed`, `cycleHoursOn`, `cycleOffHoursAfterOnDutyHours`, `dailyDrivingHours`, `dailyOffDutyDeferralAddToDay2Consecutive`, `dailyOffDutyDeferralNotPartMandatory`, `dailyOffDutyDeferralTwoDayDrivingLimit`, `dailyOffDutyDeferralTwoDayOffDuty`, `dailyOffDutyNonResetHours`, `dailyOffDutyTotalHours`, `dailyOnDutyHours`, `mandatory24HoursOffDuty`, `restbreakMissed`, `shiftDrivingHours`, `shiftHours`, `shiftOnDutyHours`, `unsubmittedLogs` */
    type: HosViolationObjectResponseBody.Type;
    /** The start time of the violation in RFC 3339 format. */
    violationStartTime: string;
}

export namespace HosViolationObjectResponseBody {
    /**
     * The string value of the violation type.  Valid values: `NONE`, `californiaMealbreakMissed`, `cycleHoursOn`, `cycleOffHoursAfterOnDutyHours`, `dailyDrivingHours`, `dailyOffDutyDeferralAddToDay2Consecutive`, `dailyOffDutyDeferralNotPartMandatory`, `dailyOffDutyDeferralTwoDayDrivingLimit`, `dailyOffDutyDeferralTwoDayOffDuty`, `dailyOffDutyNonResetHours`, `dailyOffDutyTotalHours`, `dailyOnDutyHours`, `mandatory24HoursOffDuty`, `restbreakMissed`, `shiftDrivingHours`, `shiftHours`, `shiftOnDutyHours`, `unsubmittedLogs`
     */
    export type Type =
        | "NONE"
        | "californiaMealbreakMissed"
        | "cycleHoursOn"
        | "cycleOffHoursAfterOnDutyHours"
        | "dailyDrivingHours"
        | "dailyOffDutyDeferralAddToDay2Consecutive"
        | "dailyOffDutyDeferralNotPartMandatory"
        | "dailyOffDutyDeferralTwoDayDrivingLimit"
        | "dailyOffDutyDeferralTwoDayOffDuty"
        | "dailyOffDutyNonResetHours"
        | "dailyOffDutyTotalHours"
        | "dailyOnDutyHours"
        | "mandatory24HoursOffDuty"
        | "restbreakMissed"
        | "shiftDrivingHours"
        | "shiftHours"
        | "shiftOnDutyHours"
        | "unsubmittedLogs";
    export const Type = {
        None: "NONE",
        CaliforniaMealbreakMissed: "californiaMealbreakMissed",
        CycleHoursOn: "cycleHoursOn",
        CycleOffHoursAfterOnDutyHours: "cycleOffHoursAfterOnDutyHours",
        DailyDrivingHours: "dailyDrivingHours",
        DailyOffDutyDeferralAddToDay2Consecutive: "dailyOffDutyDeferralAddToDay2Consecutive",
        DailyOffDutyDeferralNotPartMandatory: "dailyOffDutyDeferralNotPartMandatory",
        DailyOffDutyDeferralTwoDayDrivingLimit: "dailyOffDutyDeferralTwoDayDrivingLimit",
        DailyOffDutyDeferralTwoDayOffDuty: "dailyOffDutyDeferralTwoDayOffDuty",
        DailyOffDutyNonResetHours: "dailyOffDutyNonResetHours",
        DailyOffDutyTotalHours: "dailyOffDutyTotalHours",
        DailyOnDutyHours: "dailyOnDutyHours",
        Mandatory24HoursOffDuty: "mandatory24HoursOffDuty",
        RestbreakMissed: "restbreakMissed",
        ShiftDrivingHours: "shiftDrivingHours",
        ShiftHours: "shiftHours",
        ShiftOnDutyHours: "shiftOnDutyHours",
        UnsubmittedLogs: "unsubmittedLogs",
    } as const;
}
