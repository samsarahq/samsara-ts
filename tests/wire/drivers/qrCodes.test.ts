/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { SamsaraClient } from "../../../src/Client";

describe("QrCodes", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        const rawResponseBody = {
            data: [
                { driverId: 1000000, qrCodeLink: "qrCodeLink" },
                { driverId: 1000000, qrCodeLink: "qrCodeLink" },
            ],
        };
        server.mockEndpoint().get("/drivers/qr-codes").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.drivers.qrCodes.list();
        expect(response).toEqual({
            data: [
                {
                    driverId: 1000000,
                    qrCodeLink: "qrCodeLink",
                },
                {
                    driverId: 1000000,
                    qrCodeLink: "qrCodeLink",
                },
            ],
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = { driverId: 494123 };
        const rawResponseBody = {
            data: {
                driverId: 494123,
                qrCodeLink: "https://cloud.samsara.com/qr_code/18979ef6-663e-446b-8d5a-0ff0781b8bab",
            },
        };
        server
            .mockEndpoint()
            .post("/drivers/qr-codes")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.drivers.qrCodes.create({
            driverId: 494123,
        });
        expect(response).toEqual({
            data: {
                driverId: 494123,
                qrCodeLink: "https://cloud.samsara.com/qr_code/18979ef6-663e-446b-8d5a-0ff0781b8bab",
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = { driverId: 494123 };

        server
            .mockEndpoint()
            .delete("/drivers/qr-codes")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.drivers.qrCodes.delete({
            driverId: 494123,
        });
        expect(response).toEqual(undefined);
    });
});
