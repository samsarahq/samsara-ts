/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SamsaraApi from "../index.js";

/**
 * Safety settings for a single organization.
 */
export interface SafetySettingsObjectResponseBody {
    /** Default vehicle type (for newly added or activated vehicles).  Valid values: `off`, `automatic`, `passengerCar`, `lightTruck`, `heavyDuty` */
    defaultVehicleType: SafetySettingsObjectResponseBody.DefaultVehicleType;
    distractedDrivingDetectionAlerts: SamsaraApi.DistractedDrivingDetectionAlertSettingsObjectResponseBody;
    followingDistanceDetectionAlerts: SamsaraApi.FollowingDistanceDetectionAlertSettingsObjectResponseBody;
    forwardCollisionDetectionAlerts: SamsaraApi.ForwardCollisionDetectionAlertSettingsObjectResponseBody;
    harshEventSensitivity: SamsaraApi.HarshEventSensitivitySettingsObjectResponseBody;
    harshEventSensitivityV2: SamsaraApi.HarshEventSensitivityV2SettingsObjectResponseBody;
    policyViolationsDetectionAlerts: SamsaraApi.PolicyViolationsDetectionAlertSettingsObjectResponseBody;
    rollingStopDetectionAlerts: SamsaraApi.RollingStopDetectionAlertSettingsObjectResponseBody;
    safetyScoreConfiguration: SamsaraApi.SafetyScoreConfigurationSettingsObjectResponseBody;
    /** The fleet-wide target safety score that is shown on safety score graphs. A safety score goal of 0 means that score benchmarking is disabled. */
    safetyScoreTarget: number;
    speedingSettings: SamsaraApi.SpeedingSettingsObjectResponseBody;
    voiceCoaching: SamsaraApi.VoiceCoachingSettingsObjectResponseBody;
}

export namespace SafetySettingsObjectResponseBody {
    /**
     * Default vehicle type (for newly added or activated vehicles).  Valid values: `off`, `automatic`, `passengerCar`, `lightTruck`, `heavyDuty`
     */
    export type DefaultVehicleType = "off" | "automatic" | "passengerCar" | "lightTruck" | "heavyDuty";
    export const DefaultVehicleType = {
        Off: "off",
        Automatic: "automatic",
        PassengerCar: "passengerCar",
        LightTruck: "lightTruck",
        HeavyDuty: "heavyDuty",
    } as const;
}
