/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SamsaraApiClient } from "../../src/Client";

describe("Assets", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            data: {
                createdAtTime: "2020-01-27T07:06:25Z",
                externalIds: { key: "value" },
                id: "12345",
                licensePlate: "XHK1234",
                make: "Bobcat",
                model: "S630 T4",
                name: "MyAsset-1234",
                notes: "These are notes.",
                regulationMode: "mixed",
                serialNumber: "LN016251",
                tags: [{ id: "3914", name: "East Coast", parentTagId: "4815" }],
                type: "uncategorized",
                updatedAtTime: "2020-01-27T07:06:25Z",
                vin: "1FUJBBCKXCLBZ1234",
                year: 2015,
            },
        };
        server
            .mockEndpoint()
            .post("/assets")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.create();
        expect(response).toEqual({
            data: {
                createdAtTime: "2020-01-27T07:06:25Z",
                externalIds: {
                    key: "value",
                },
                id: "12345",
                licensePlate: "XHK1234",
                make: "Bobcat",
                model: "S630 T4",
                name: "MyAsset-1234",
                notes: "These are notes.",
                regulationMode: "mixed",
                serialNumber: "LN016251",
                tags: [
                    {
                        id: "3914",
                        name: "East Coast",
                        parentTagId: "4815",
                    },
                ],
                type: "uncategorized",
                updatedAtTime: "2020-01-27T07:06:25Z",
                vin: "1FUJBBCKXCLBZ1234",
                year: 2015,
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        server.mockEndpoint().delete("/assets").respondWith().statusCode(200).build();

        const response = await client.assets.delete({
            id: "id",
        });
        expect(response).toEqual(undefined);
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            data: {
                createdAtTime: "2020-01-27T07:06:25Z",
                externalIds: { key: "value" },
                id: "12345",
                licensePlate: "XHK1234",
                make: "Bobcat",
                model: "S630 T4",
                name: "MyAsset-1234",
                notes: "These are notes.",
                regulationMode: "mixed",
                serialNumber: "LN016251",
                tags: [{ id: "3914", name: "East Coast", parentTagId: "4815" }],
                type: "uncategorized",
                updatedAtTime: "2020-01-27T07:06:25Z",
                vin: "1FUJBBCKXCLBZ1234",
                year: 2015,
            },
        };
        server
            .mockEndpoint()
            .patch("/assets")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.update({
            id: "id",
        });
        expect(response).toEqual({
            data: {
                createdAtTime: "2020-01-27T07:06:25Z",
                externalIds: {
                    key: "value",
                },
                id: "12345",
                licensePlate: "XHK1234",
                make: "Bobcat",
                model: "S630 T4",
                name: "MyAsset-1234",
                notes: "These are notes.",
                regulationMode: "mixed",
                serialNumber: "LN016251",
                tags: [
                    {
                        id: "3914",
                        name: "East Coast",
                        parentTagId: "4815",
                    },
                ],
                type: "uncategorized",
                updatedAtTime: "2020-01-27T07:06:25Z",
                vin: "1FUJBBCKXCLBZ1234",
                year: 2015,
            },
        });
    });
});
