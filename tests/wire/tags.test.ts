/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SamsaraApiClient } from "../../src/Client";

describe("Tags", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = { name: "California" };
        const rawResponseBody = {
            data: {
                addresses: [{ id: "23502866574", name: "Driver Don" }],
                assets: [{ id: "23502866574", name: "Driver Don" }],
                drivers: [{ id: "23502866574", name: "Driver Don" }],
                machines: [{ id: "23502866574", name: "Driver Don" }],
                parentTag: { id: "23502866574", name: "US West Vehicles" },
                sensors: [{ id: "23502866574", name: "Driver Don" }],
                vehicles: [{ id: "23502866574", name: "Driver Don" }],
                id: "342417",
                name: "California",
                parentTagId: "4815",
            },
        };
        server
            .mockEndpoint()
            .post("/tags")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tags.create({
            name: "California",
        });
        expect(response).toEqual({
            data: {
                addresses: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                assets: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                drivers: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                machines: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                parentTag: {
                    id: "23502866574",
                    name: "US West Vehicles",
                },
                sensors: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                vehicles: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                id: "342417",
                name: "California",
                parentTagId: "4815",
            },
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                addresses: [{ id: "23502866574", name: "Driver Don" }],
                assets: [{ id: "23502866574", name: "Driver Don" }],
                drivers: [{ id: "23502866574", name: "Driver Don" }],
                machines: [{ id: "23502866574", name: "Driver Don" }],
                parentTag: { id: "23502866574", name: "US West Vehicles" },
                sensors: [{ id: "23502866574", name: "Driver Don" }],
                vehicles: [{ id: "23502866574", name: "Driver Don" }],
                id: "342417",
                name: "California",
                parentTagId: "4815",
            },
        };
        server.mockEndpoint().get("/tags/id").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.tags.get("id");
        expect(response).toEqual({
            data: {
                addresses: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                assets: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                drivers: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                machines: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                parentTag: {
                    id: "23502866574",
                    name: "US West Vehicles",
                },
                sensors: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                vehicles: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                id: "342417",
                name: "California",
                parentTagId: "4815",
            },
        });
    });

    test("replace", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            data: {
                addresses: [{ id: "23502866574", name: "Driver Don" }],
                assets: [{ id: "23502866574", name: "Driver Don" }],
                drivers: [{ id: "23502866574", name: "Driver Don" }],
                machines: [{ id: "23502866574", name: "Driver Don" }],
                parentTag: { id: "23502866574", name: "US West Vehicles" },
                sensors: [{ id: "23502866574", name: "Driver Don" }],
                vehicles: [{ id: "23502866574", name: "Driver Don" }],
                id: "342417",
                name: "California",
                parentTagId: "4815",
            },
        };
        server
            .mockEndpoint()
            .put("/tags/id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tags.replace("id");
        expect(response).toEqual({
            data: {
                addresses: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                assets: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                drivers: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                machines: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                parentTag: {
                    id: "23502866574",
                    name: "US West Vehicles",
                },
                sensors: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                vehicles: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                id: "342417",
                name: "California",
                parentTagId: "4815",
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        const rawResponseBody = { key: "value" };
        server.mockEndpoint().delete("/tags/id").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.tags.delete("id");
        expect(response).toEqual({
            key: "value",
        });
    });

    test("patch", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            data: {
                addresses: [{ id: "23502866574", name: "Driver Don" }],
                assets: [{ id: "23502866574", name: "Driver Don" }],
                drivers: [{ id: "23502866574", name: "Driver Don" }],
                machines: [{ id: "23502866574", name: "Driver Don" }],
                parentTag: { id: "23502866574", name: "US West Vehicles" },
                sensors: [{ id: "23502866574", name: "Driver Don" }],
                vehicles: [{ id: "23502866574", name: "Driver Don" }],
                id: "342417",
                name: "California",
                parentTagId: "4815",
            },
        };
        server
            .mockEndpoint()
            .patch("/tags/id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tags.patch("id");
        expect(response).toEqual({
            data: {
                addresses: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                assets: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                drivers: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                machines: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                parentTag: {
                    id: "23502866574",
                    name: "US West Vehicles",
                },
                sensors: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                vehicles: [
                    {
                        id: "23502866574",
                        name: "Driver Don",
                    },
                ],
                id: "342417",
                name: "California",
                parentTagId: "4815",
            },
        });
    });
});
