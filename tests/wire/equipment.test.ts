/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SamsaraApiClient } from "../../src/Client";

describe("Equipment", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                assetSerial: "1FUJA6BD31LJ09646",
                externalIds: { maintenanceId: "250020", payrollId: "ABFS18600" },
                id: "112",
                installedGateway: { model: "Ag26", serial: "serial" },
                name: "Crane A7",
                notes: "These are notes about this given equipment.",
                tags: [{ id: "3914", name: "East Coast", parentTagId: "4815" }],
            },
        };
        server
            .mockEndpoint()
            .get("/fleet/equipment/id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.equipment.get("id");
        expect(response).toEqual({
            data: {
                assetSerial: "1FUJA6BD31LJ09646",
                externalIds: {
                    maintenanceId: "250020",
                    payrollId: "ABFS18600",
                },
                id: "112",
                installedGateway: {
                    model: "Ag26",
                    serial: "serial",
                },
                name: "Crane A7",
                notes: "These are notes about this given equipment.",
                tags: [
                    {
                        id: "3914",
                        name: "East Coast",
                        parentTagId: "4815",
                    },
                ],
            },
        });
    });
});
