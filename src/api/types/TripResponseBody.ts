/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Samsara from "../index.js";

/**
 * Trip
 */
export interface TripResponseBody {
    asset: Samsara.TripAssetResponseBody;
    /** Trip completion status  Valid values: `inProgress`, `completed` */
    completionStatus: TripResponseBody.CompletionStatus;
    /** [RFC 3339] Time the trip was created in Samsara in UTC. */
    createdAtTime: string;
    endLocation?: Samsara.LocationResponseResponseBody;
    startLocation: Samsara.LocationResponseResponseBody;
    /** [RFC 3339] Time the trip ended in UTC. */
    tripEndTime?: string;
    /** [RFC 3339] Time the trip started in UTC. */
    tripStartTime: string;
    /** [RFC 3339] Time the trip was updated in Samsara in UTC. Valid updates are when `endTime` populates or `completionStatus` changes values. */
    updatedAtTime: string;
}

export namespace TripResponseBody {
    /**
     * Trip completion status  Valid values: `inProgress`, `completed`
     */
    export type CompletionStatus = "inProgress" | "completed";
    export const CompletionStatus = {
        InProgress: "inProgress",
        Completed: "completed",
    } as const;
}
