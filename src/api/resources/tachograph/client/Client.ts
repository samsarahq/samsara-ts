/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments.js";
import * as core from "../../../../core/index.js";
import { Driver } from "../resources/driver/client/Client.js";
import { Vehicles } from "../resources/vehicles/client/Client.js";

export declare namespace Tachograph {
    export interface Options {
        environment?: core.Supplier<environments.SamsaraEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-Samsara-Version header */
        version?: "2025-05-12";
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class Tachograph {
    protected readonly _options: Tachograph.Options;
    protected _driver: Driver | undefined;
    protected _vehicles: Vehicles | undefined;

    constructor(_options: Tachograph.Options = {}) {
        this._options = _options;
    }

    public get driver(): Driver {
        return (this._driver ??= new Driver(this._options));
    }

    public get vehicles(): Vehicles {
        return (this._vehicles ??= new Vehicles(this._options));
    }
}
