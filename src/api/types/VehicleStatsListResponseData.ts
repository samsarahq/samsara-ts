/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SamsaraApi from "../index.js";

/**
 * A vehicle and its list of stat events.
 */
export interface VehicleStatsListResponseData {
    /** A list of ambient air temperature readings in millidegree Celsius for the given vehicle. */
    ambientAirTemperatureMilliC?: SamsaraApi.VehicleStatsAmbientAirTempMilliCWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput1?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput10?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput11?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput12?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput13?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput2?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput3?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput4?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput5?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput6?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput7?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput8?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of auxiliary equipment states. */
    auxInput9?: SamsaraApi.VehicleStatsAuxInputWithDecoration[];
    /** A list of barometric pressure readings in pascals for the given vehicle. */
    barometricPressurePa?: SamsaraApi.VehicleStatsBarometricPressurePaWithDecoration[];
    /** A list of battery levels in milliVolts for the given vehicle. */
    batteryMilliVolts?: SamsaraApi.VehicleStatsBatteryVoltageWithDecoration[];
    /** A list of DEF level milli percentage readings for the given vehicle. */
    defLevelMilliPercent?: SamsaraApi.VehicleStatsDefLevelMilliPercentWithDecoration[];
    /** A list of the speeds of the vehicle in miles per hour, as reported by the ECU. */
    ecuSpeedMph?: SamsaraApi.VehicleStatsEcuSpeedMphWithDecoration[];
    /** A list of engine coolant temperature readings in millidegree Celsius for the given vehicle. */
    engineCoolantTemperatureMilliC?: SamsaraApi.VehicleStatsEngineCoolantTempMilliCWithDecoration[];
    /** A list of engine immobilizer data for the given vehicle. */
    engineImmobilizer?: SamsaraApi.VehicleStatsEngineImmobilizerWithDecoration[];
    /** A list of engine load percentage readings for the given vehicle. */
    engineLoadPercent?: SamsaraApi.VehicleStatsEngineLoadPercentWithDecoration[];
    /** A list of engine oil pressure readings in kilopascals for the given vehicle. */
    engineOilPressureKPa?: SamsaraApi.VehicleStatsEngineOilPressureKPaWithDecoration[];
    /** A list engine RPM values for the given vehicle. */
    engineRpm?: SamsaraApi.VehicleStatsEngineRpmWithDecoration[];
    /** A list of engine state events for the given vehicle. */
    engineStates?: SamsaraApi.VehicleStatsEngineStateWithDecoration[];
    /** Battery temperature for electric and hybrid vehicles in milli celsius. Not all EV and HEVs may report this field. */
    evAverageBatteryTemperatureMilliCelsius?: SamsaraApi.VehicleStatsEvAverageBatteryTemperatureMilliCelsius[];
    /** Battery current for electric and hybrid vehicles in milli amps. Not all EV and HEVs may report this field. */
    evBatteryCurrentMilliAmp?: SamsaraApi.VehicleStatsEvBatteryCurrentMilliAmp[];
    /** Milli percent battery state of health for electric and hybrid vehicles. Not all EV and HEVs may report this field. */
    evBatteryStateOfHealthMilliPercent?: SamsaraApi.VehicleStatsEvBatteryStateOfHealthMilliPercent[];
    /** Battery voltage for electric and hybrid vehicles in milli volts. Not all EV and HEVs may report this field. */
    evBatteryVoltageMilliVolt?: SamsaraApi.VehicleStatsEvBatteryVoltageMilliVolt[];
    /** Charging current for electric and hybrid vehicles in milli amps. Not all EV and HEVs may report this field. */
    evChargingCurrentMilliAmp?: SamsaraApi.VehicleStatsEvChargingCurrentMilliAmp[];
    /** Charging energy for electric and hybrid vehicles in microwatt hours. Not all EV and HEVs may report this field. */
    evChargingEnergyMicroWh?: SamsaraApi.VehicleStatsEvChargingEnergyMicroWh[];
    /** Charging status for electric and hybrid vehicles. Not all EV and HEVs may report this field. */
    evChargingStatus?: SamsaraApi.VehicleStatsEvChargingStatus[];
    /** Charging voltage for electric and hybrid vehicles in milli  volts. Not all EV and HEVs may report this field. */
    evChargingVoltageMilliVolt?: SamsaraApi.VehicleStatsEvChargingVoltageMilliVolt[];
    /** Consumed energy (including regenerated) for electric and hybrid vehicles in microwatt hours. Not all EV and HEVs may report this field. */
    evConsumedEnergyMicroWh?: SamsaraApi.VehicleStatsEvConsumedEnergyMicroWh[];
    /** Electric distance driven for electric and hybrid vehicles in meters. Not all EV and HEVs may report this field. */
    evDistanceDrivenMeters?: SamsaraApi.VehicleStatsEvDistanceDrivenMeters[];
    /** Regenerated energy for electric and hybrid vehicles in microwatt hours. Not all EV and HEVs may report this field. */
    evRegeneratedEnergyMicroWh?: SamsaraApi.VehicleStatsEvRegeneratedEnergyMicroWh[];
    /** State of Charge for electric and hybrid vehicles. Not all EV and HEVs may report this field. */
    evStateOfChargeMilliPercent?: SamsaraApi.VehicleStatsEvStateOfChargeMilliPercent[];
    externalIds?: SamsaraApi.VehicleExternalIds;
    /** A list of engine fault codes. */
    faultCodes?: SamsaraApi.VehicleStatsFaultCodesWithDecoration[];
    /** A list of fuel percentage readings for the given vehicle. */
    fuelPercents?: SamsaraApi.VehicleStatsFuelPercentWithDecoration[];
    /** A list of GPS location events for the given vehicles. */
    gps?: SamsaraApi.VehicleStatsListGps[];
    /** A list of GPS distance events for the given vehicle. */
    gpsDistanceMeters?: SamsaraApi.VehicleStatsGpsDistanceMetersWithDecoration[];
    /** A list of GPS odometer events for the given vehicle. */
    gpsOdometerMeters?: SamsaraApi.VehicleStatsGpsOdometerMetersWithDecoration[];
    id?: SamsaraApi.VehicleId;
    /** A list of intake manifold temperature readings in millidegree Celsius for the given vehicle. */
    intakeManifoldTemperatureMilliC?: SamsaraApi.VehicleStatsIntakeManifoldTempMilliCWithDecoration[];
    name?: SamsaraApi.VehicleName;
    /** A list of NFC cards that were scanned for the given vehicles. */
    nfcCardScans?: SamsaraApi.VehicleStatsNfcCardScanWithDecoration[];
    /** A list of OBD engine seconds readings for the given vehicle. */
    obdEngineSeconds?: SamsaraApi.VehicleStatsObdEngineSecondsWithDecoration[];
    /** A list of OBD odometer readings for the given vehicle. */
    obdOdometerMeters?: SamsaraApi.VehicleStatsObdOdometerMetersWithDecoration[];
    /** Seatbelt Driver Status as read from the vehicle. `Buckled` or `Unbuckled`. */
    seatbeltDriver?: SamsaraApi.VehicleStatsSeatbeltDriver[];
    /** Whether vehicle is actively spreading any material. */
    spreaderActive?: SamsaraApi.VehicleStatsSpreaderActive[];
    /** Air (ambient) temperature in milli celsius reading from material spreader. */
    spreaderAirTemp?: SamsaraApi.VehicleStatsSpreaderAirTemp[];
    /** Whether vehicle is actively spreading material in ‘blast mode’. */
    spreaderBlastState?: SamsaraApi.VehicleStatsSpreaderBlastState[];
    /** Name of most recent type of granular material spread, read from the material spreader. */
    spreaderGranularName?: SamsaraApi.VehicleStatsSpreaderGranularName[];
    /** Granular spread rate reading in milliliters per meter, read from the material spreader. Unfiltered live stats are supplied as-read from the Material Spreader unit. Readings do not consider total spread rate(s) over time or distance. */
    spreaderGranularRate?: SamsaraApi.VehicleStatsSpreaderGranularRate[];
    /** Name of most recent type of liquid material spread, read from the material spreader. */
    spreaderLiquidName?: SamsaraApi.VehicleStatsSpreaderLiquidName[];
    /** Liquid spread rate reading in milliliters per meter, read from the material spreader. Unfiltered live stats are supplied as-read from the Material Spreader unit. Readings do not consider total spread rate(s) over time or distance. */
    spreaderLiquidRate?: SamsaraApi.VehicleStatsSpreaderLiquidRate[];
    /** Whether vehicle spreader is enabled. */
    spreaderOnState?: SamsaraApi.VehicleStatsSpreaderOnState[];
    /** Snow plow status (`Up` or `Down`), as read from the material spreader. Note: this is separate from plow status defined via auxInput. */
    spreaderPlowStatus?: SamsaraApi.VehicleStatsSpreaderPlowStatus[];
    /** Name of most recent type of prewet material spread, read from the material spreader. */
    spreaderPrewetName?: SamsaraApi.VehicleStatsSpreaderPrewetName[];
    /** Prewet spread rate reading in milliliters per meter, read from the material spreader. Unfiltered live stats are supplied as-read from the Material Spreader unit. Readings do not consider total spread rate(s) over time or distance. */
    spreaderPrewetRate?: SamsaraApi.VehicleStatsSpreaderPrewetRate[];
    /** Road temperature reading in milli celsius from material spreader. */
    spreaderRoadTemp?: SamsaraApi.VehicleStatsSpreaderRoadTemp[];
    /** A list of synthetic engine seconds values. */
    syntheticEngineSeconds?: SamsaraApi.VehicleStatsListSyntheticEngineSeconds[];
}
