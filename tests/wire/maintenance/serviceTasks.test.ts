/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { SamsaraApiClient } from "../../../src/Client";

describe("ServiceTasks", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        server.mockEndpoint().post("/maintenance/service-tasks").respondWith().statusCode(200).build();

        const response = await client.maintenance.serviceTasks.create();
        expect(response).toEqual(undefined);
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        server.mockEndpoint().delete("/maintenance/service-tasks").respondWith().statusCode(200).build();

        const response = await client.maintenance.serviceTasks.delete();
        expect(response).toEqual(undefined);
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraApiClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        server.mockEndpoint().patch("/maintenance/service-tasks").respondWith().statusCode(200).build();

        const response = await client.maintenance.serviceTasks.update();
        expect(response).toEqual(undefined);
    });
});
