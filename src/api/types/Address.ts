/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SamsaraApi from "../index.js";

/**
 * An Address object.
 */
export interface Address {
    /** Reporting location type associated with the address (used for ELD reporting purposes). Valid values: `yard`, `shortHaul`, `workforceSite`, `riskZone`, `industrialSite`, `alertsOnly`, `agricultureSource`. */
    addressTypes?: Address.AddressTypes.Item[];
    /** An array Contact mini-objects that are associated the Address. */
    contacts?: SamsaraApi.ContactTinyResponse[];
    /** The date and time this address was created in RFC 3339 format. */
    createdAtTime?: string;
    /** The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object. */
    externalIds?: SamsaraApi.ExternalIds;
    /** The full street address for this address/geofence, as it might be recognized by Google Maps. */
    formattedAddress: string;
    geofence: SamsaraApi.AddressGeofence;
    /** ID of the Address. */
    id: string;
    /** Latitude of the address. Will be geocoded from `formattedAddress` if not provided. */
    latitude?: number;
    /** Longitude of the address. Will be geocoded from `formattedAddress` if not provided. */
    longitude?: number;
    /** Name of the address. */
    name: string;
    /** Notes about the address. */
    notes?: string;
    /** An array of all tag mini-objects that are associated with the given address entry. */
    tags?: SamsaraApi.TagTinyResponse[];
}

export namespace Address {
    export type AddressTypes = AddressTypes.Item[];

    export namespace AddressTypes {
        export type Item =
            | "yard"
            | "shortHaul"
            | "workforceSite"
            | "riskZone"
            | "industrialSite"
            | "alertsOnly"
            | "agricultureSource";
        export const Item = {
            Yard: "yard",
            ShortHaul: "shortHaul",
            WorkforceSite: "workforceSite",
            RiskZone: "riskZone",
            IndustrialSite: "industrialSite",
            AlertsOnly: "alertsOnly",
            AgricultureSource: "agricultureSource",
        } as const;
    }
}
