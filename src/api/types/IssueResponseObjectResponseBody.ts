/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Samsara from "../index.js";

/**
 * Issue response object.
 */
export interface IssueResponseObjectResponseBody {
    asset?: Samsara.FormsAssetObjectResponseBody;
    assignedTo?: Samsara.FormsPolymorphicUserObjectResponseBody;
    /** Creation time of the issue. UTC timestamp in RFC 3339 format. */
    createdAtTime: string;
    /** Description of the issue. Included if the issue was given a description. */
    description?: string;
    /** Due date of the issue. UTC timestamp in RFC 3339 format. Included if the issue was assigned a due date. */
    dueDate?: string;
    /** A map of external ids */
    externalIds?: Record<string, string>;
    /** ID of the issue. */
    id: string;
    issueSource: Samsara.IssueSourceObjectResponseBody;
    /** List of media objects for the issue. Included if the issue has media. */
    mediaList?: Samsara.FormsMediaRecordObjectResponseBody[];
    /** Priority of the issue. Included if the issue was assigned a priority.  Valid values: `low`, `medium`, `high` */
    priority?: IssueResponseObjectResponseBody.Priority;
    /** Status of the issue.  Valid values: `open`, `inProgress`, `resolved`, `dismissed` */
    status: IssueResponseObjectResponseBody.Status;
    /** Submission time of the issue. UTC timestamp in RFC 3339 format. */
    submittedAtTime: string;
    submittedBy: Samsara.FormsPolymorphicUserObjectResponseBody;
    /** Title of the issue. */
    title: string;
    /** Update time of the issue. UTC timestamp in RFC 3339 format. */
    updatedAtTime: string;
}

export namespace IssueResponseObjectResponseBody {
    /**
     * Priority of the issue. Included if the issue was assigned a priority.  Valid values: `low`, `medium`, `high`
     */
    export type Priority = "low" | "medium" | "high";
    export const Priority = {
        Low: "low",
        Medium: "medium",
        High: "high",
    } as const;
    /**
     * Status of the issue.  Valid values: `open`, `inProgress`, `resolved`, `dismissed`
     */
    export type Status = "open" | "inProgress" | "resolved" | "dismissed";
    export const Status = {
        Open: "open",
        InProgress: "inProgress",
        Resolved: "resolved",
        Dismissed: "dismissed",
    } as const;
}
