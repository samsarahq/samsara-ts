/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SamsaraApi from "../../../../index.js";

/**
 * @example
 *     {
 *         id: "9814a1fa-f0c6-408b-bf85-51dc3bc71ac8",
 *         status: "notStarted"
 *     }
 */
export interface FormSubmissionsPatchFormSubmissionRequestBody {
    approvalDetails?: SamsaraApi.FormSubmissionRequestApprovalDetailsRequestBody;
    assignedTo?: SamsaraApi.FormSubmissionRequestAssignedToRequestBody;
    /** Due date of the form submission. UTC timestamp in RFC 3339 format. */
    dueAtTime?: string;
    /** ID of the form submission. */
    id: string;
    /** Indicates whether the worker is required to complete this form or not at a specific route stop. Defaults to `true` if the form is assigned to a user or driver. When true, the worker cannot depart the route stop until this form submission is `submitted`. */
    isRequired?: boolean;
    /** ID of the route stop the form submission is assigned to. Must be a unique Samsara ID. */
    routeStopId?: string;
    /** Status of the form submission.  Valid values: `notStarted`, `archived`, `inProgress`, `changesRequested`, `approved` */
    status?: FormSubmissionsPatchFormSubmissionRequestBody.Status;
    /** Title of the form submission. */
    title?: string;
}

export namespace FormSubmissionsPatchFormSubmissionRequestBody {
    /**
     * Status of the form submission.  Valid values: `notStarted`, `archived`, `inProgress`, `changesRequested`, `approved`
     */
    export type Status = "notStarted" | "archived" | "inProgress" | "changesRequested" | "approved";
    export const Status = {
        NotStarted: "notStarted",
        Archived: "archived",
        InProgress: "inProgress",
        ChangesRequested: "changesRequested",
        Approved: "approved",
    } as const;
}
