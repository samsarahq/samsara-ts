/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SamsaraClient } from "../../src/Client";

describe("Webhooks", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = { name: "Webhook-123", url: "https://www.Webhook-123.com/webhook/listener" };
        const rawResponseBody = {
            customHeaders: [{ key: "format", value: "xcmol-532" }],
            eventTypes: ["AddressCreated", "AddressCreated", "AddressCreated"],
            id: "23918",
            name: "Webhook-123",
            secretKey: "11121-31231-1231212",
            url: "https://www.webhook-123.com/webhook/listener",
            version: "2018-01-01",
        };
        server
            .mockEndpoint()
            .post("/webhooks")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.webhooks.create({
            name: "Webhook-123",
            url: "https://www.Webhook-123.com/webhook/listener",
        });
        expect(response).toEqual({
            customHeaders: [
                {
                    key: "format",
                    value: "xcmol-532",
                },
            ],
            eventTypes: ["AddressCreated", "AddressCreated", "AddressCreated"],
            id: "23918",
            name: "Webhook-123",
            secretKey: "11121-31231-1231212",
            url: "https://www.webhook-123.com/webhook/listener",
            version: "2018-01-01",
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        const rawResponseBody = {
            customHeaders: [{ key: "format", value: "xcmol-532" }],
            eventTypes: ["AddressCreated", "AddressCreated"],
            id: "23918",
            name: "Webhook-123",
            secretKey: "11121-31231-1231212",
            url: "https://www.webhook-123.com/webhook/listener",
            version: "2018-01-01",
        };
        server.mockEndpoint().get("/webhooks/id").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.webhooks.get("id");
        expect(response).toEqual({
            customHeaders: [
                {
                    key: "format",
                    value: "xcmol-532",
                },
            ],
            eventTypes: ["AddressCreated", "AddressCreated"],
            id: "23918",
            name: "Webhook-123",
            secretKey: "11121-31231-1231212",
            url: "https://www.webhook-123.com/webhook/listener",
            version: "2018-01-01",
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });

        server.mockEndpoint().delete("/webhooks/id").respondWith().statusCode(200).build();

        const response = await client.webhooks.delete("id");
        expect(response).toEqual(undefined);
    });

    test("patch", async () => {
        const server = mockServerPool.createServer();
        const client = new SamsaraClient({ token: "test", version: "2025-05-12", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            customHeaders: [{ key: "format", value: "xcmol-532" }],
            eventTypes: ["AddressCreated", "AddressCreated"],
            id: "23918",
            name: "Webhook-123",
            secretKey: "11121-31231-1231212",
            url: "https://www.webhook-123.com/webhook/listener",
            version: "2018-01-01",
        };
        server
            .mockEndpoint()
            .patch("/webhooks/id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.webhooks.patch("id");
        expect(response).toEqual({
            customHeaders: [
                {
                    key: "format",
                    value: "xcmol-532",
                },
            ],
            eventTypes: ["AddressCreated", "AddressCreated"],
            id: "23918",
            name: "Webhook-123",
            secretKey: "11121-31231-1231212",
            url: "https://www.webhook-123.com/webhook/listener",
            version: "2018-01-01",
        });
    });
});
