/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Samsara from "../../../../index.js";

/**
 * @example
 *     {}
 */
export interface UpdateDriverRequest {
    attributes?: Samsara.CreateDriverRequestAttributes[];
    carrierSettings?: Samsara.DriverCarrierSettings;
    /** The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature. */
    currentIdCardCode?: string;
    /** The date and time this driver is considered to be deactivated in RFC 3339 format. */
    deactivatedAtTime?: string;
    /** A value indicating whether the driver is active or deactivated. Valid values: `active`, `deactivated`. */
    driverActivationStatus?: UpdateDriverRequest.DriverActivationStatus;
    /** Flag indicating this driver may use Adverse Weather exemptions in ELD logs. */
    eldAdverseWeatherExemptionEnabled?: boolean;
    /** Flag indicating this driver may use Big Day exemption in ELD logs. */
    eldBigDayExemptionEnabled?: boolean;
    /** `0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours. */
    eldDayStartHour?: number;
    /** Flag indicating this driver is exempt from the Electronic Logging Mandate. */
    eldExempt?: boolean;
    /** Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt). */
    eldExemptReason?: string;
    /** Flag indicating this driver may select the Personal Conveyance duty status in ELD logs. */
    eldPcEnabled?: boolean;
    /** Flag indicating this driver may select the Yard Move duty status in ELD logs. */
    eldYmEnabled?: boolean;
    /** The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object. */
    externalIds?: Record<string, string>;
    hasDrivingFeaturesHidden?: Samsara.DriverHasDrivingFeaturesHidden;
    hosSetting?: Samsara.UpdateDriverRequestHosSetting;
    /** Driver's state issued license number. The combination of this number and `licenseState` must be unique. */
    licenseNumber?: string;
    /** Abbreviation of US state, Canadian province, or US territory that issued driver's license. */
    licenseState?: string;
    /** Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales. Valid values: `us`, `at`, `be`, `ca`, `gb`, `fr`, `de`, `ie`, `it`, `lu`, `mx`, `nl`, `es`, `ch`, `pr`. */
    locale?: UpdateDriverRequest.Locale;
    /** Driver's name. */
    name?: string;
    /** Notes about the driver. */
    notes?: string;
    /** Password that the driver can use to login to the Samsara driver app. */
    password?: string;
    /** The peer group tag id this driver belong to, leave blank to be in group with everyone, used for gamification. */
    peerGroupTagId?: string;
    /** Phone number of the driver. */
    phone?: string;
    /** ID of vehicle that the driver is permanently assigned to. (uncommon). */
    staticAssignedVehicleId?: string;
    /** Driver's assigned tachograph card number (Europe specific) */
    tachographCardNumber?: string;
    /** IDs of tags the driver is associated with. If your access to the API is scoped by one or more tags, this field is required to pass in. */
    tagIds?: string[];
    /** Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html). */
    timezone?: string;
    usDriverRulesetOverride?: Samsara.UsDriverRulesetOverride;
    /** Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique. */
    username?: string;
    /** Tag ID which determines which vehicles a driver will see when selecting vehicles. */
    vehicleGroupTagId?: string;
    /** Flag indicating this driver may select waiting time duty status in ELD logs */
    waitingTimeDutyStatusEnabled?: boolean;
}

export namespace UpdateDriverRequest {
    /**
     * A value indicating whether the driver is active or deactivated. Valid values: `active`, `deactivated`.
     */
    export type DriverActivationStatus = "active" | "deactivated";
    export const DriverActivationStatus = {
        Active: "active",
        Deactivated: "deactivated",
    } as const;
    /**
     * Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales. Valid values: `us`, `at`, `be`, `ca`, `gb`, `fr`, `de`, `ie`, `it`, `lu`, `mx`, `nl`, `es`, `ch`, `pr`.
     */
    export type Locale =
        | "us"
        | "at"
        | "be"
        | "ca"
        | "gb"
        | "fr"
        | "de"
        | "ie"
        | "it"
        | "lu"
        | "mx"
        | "nl"
        | "es"
        | "ch"
        | "pr";
    export const Locale = {
        Us: "us",
        At: "at",
        Be: "be",
        Ca: "ca",
        Gb: "gb",
        Fr: "fr",
        De: "de",
        Ie: "ie",
        It: "it",
        Lu: "lu",
        Mx: "mx",
        Nl: "nl",
        Es: "es",
        Ch: "ch",
        Pr: "pr",
    } as const;
}
