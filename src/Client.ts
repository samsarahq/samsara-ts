/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments.js";
import * as core from "./core/index.js";
import { mergeHeaders } from "./core/headers.js";
import { Addresses } from "./api/resources/addresses/client/Client.js";
import { Assets } from "./api/resources/assets/client/Client.js";
import { Inputs } from "./api/resources/inputs/client/Client.js";
import { Attributes } from "./api/resources/attributes/client/Client.js";
import { Contacts } from "./api/resources/contacts/client/Client.js";
import { DefectTypes } from "./api/resources/defectTypes/client/Client.js";
import { Defects } from "./api/resources/defects/client/Client.js";
import { Devices } from "./api/resources/devices/client/Client.js";
import { DriverTrailerAssignments } from "./api/resources/driverTrailerAssignments/client/Client.js";
import { Dvirs } from "./api/resources/dvirs/client/Client.js";
import { CarrierProposedAssignments } from "./api/resources/carrierProposedAssignments/client/Client.js";
import { DocumentTypes } from "./api/resources/documentTypes/client/Client.js";
import { Documents } from "./api/resources/documents/client/Client.js";
import { DriverVehicleAssignments } from "./api/resources/driverVehicleAssignments/client/Client.js";
import { Drivers } from "./api/resources/drivers/client/Client.js";
import { Equipment } from "./api/resources/equipment/client/Client.js";
import { Hos } from "./api/resources/hos/client/Client.js";
import { Routes } from "./api/resources/routes/client/Client.js";
import { SafetyEvents } from "./api/resources/safetyEvents/client/Client.js";
import { Trailers } from "./api/resources/trailers/client/Client.js";
import { Vehicles } from "./api/resources/vehicles/client/Client.js";
import { Legacy } from "./api/resources/legacy/client/Client.js";
import { FormSubmissions } from "./api/resources/formSubmissions/client/Client.js";
import { Forms } from "./api/resources/forms/client/Client.js";
import { FuelPurchases } from "./api/resources/fuelPurchases/client/Client.js";
import { Gateways } from "./api/resources/gateways/client/Client.js";
import { Idling } from "./api/resources/idling/client/Client.js";
import { Issues } from "./api/resources/issues/client/Client.js";
import { LiveShares } from "./api/resources/liveShares/client/Client.js";
import { Me } from "./api/resources/me/client/Client.js";
import { Readings } from "./api/resources/readings/client/Client.js";
import { SpeedingIntervals } from "./api/resources/speedingIntervals/client/Client.js";
import { Tags } from "./api/resources/tags/client/Client.js";
import { TrainingAssignments } from "./api/resources/trainingAssignments/client/Client.js";
import { TrainingCourses } from "./api/resources/trainingCourses/client/Client.js";
import { Trips } from "./api/resources/trips/client/Client.js";
import { UserRoles } from "./api/resources/userRoles/client/Client.js";
import { Users } from "./api/resources/users/client/Client.js";
import { V1Messages } from "./api/resources/v1Messages/client/Client.js";
import { Webhooks } from "./api/resources/webhooks/client/Client.js";
import { Alerts } from "./api/resources/alerts/client/Client.js";
import { Auth } from "./api/resources/auth/client/Client.js";
import { Cameras } from "./api/resources/cameras/client/Client.js";
import { Coaching } from "./api/resources/coaching/client/Client.js";
import { Ifta } from "./api/resources/ifta/client/Client.js";
import { Maintenance } from "./api/resources/maintenance/client/Client.js";
import { Reports } from "./api/resources/reports/client/Client.js";
import { Settings } from "./api/resources/settings/client/Client.js";
import { Tachograph } from "./api/resources/tachograph/client/Client.js";

export declare namespace SamsaraClient {
    export interface Options {
        environment?: core.Supplier<environments.SamsaraEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-Samsara-Version header */
        version?: "2025-05-12";
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        /** Override the X-Samsara-Version header */
        version?: "2025-05-12";
    }
}

export class SamsaraClient {
    protected readonly _options: SamsaraClient.Options;
    protected _addresses: Addresses | undefined;
    protected _assets: Assets | undefined;
    protected _inputs: Inputs | undefined;
    protected _attributes: Attributes | undefined;
    protected _contacts: Contacts | undefined;
    protected _defectTypes: DefectTypes | undefined;
    protected _defects: Defects | undefined;
    protected _devices: Devices | undefined;
    protected _driverTrailerAssignments: DriverTrailerAssignments | undefined;
    protected _dvirs: Dvirs | undefined;
    protected _carrierProposedAssignments: CarrierProposedAssignments | undefined;
    protected _documentTypes: DocumentTypes | undefined;
    protected _documents: Documents | undefined;
    protected _driverVehicleAssignments: DriverVehicleAssignments | undefined;
    protected _drivers: Drivers | undefined;
    protected _equipment: Equipment | undefined;
    protected _hos: Hos | undefined;
    protected _routes: Routes | undefined;
    protected _safetyEvents: SafetyEvents | undefined;
    protected _trailers: Trailers | undefined;
    protected _vehicles: Vehicles | undefined;
    protected _legacy: Legacy | undefined;
    protected _formSubmissions: FormSubmissions | undefined;
    protected _forms: Forms | undefined;
    protected _fuelPurchases: FuelPurchases | undefined;
    protected _gateways: Gateways | undefined;
    protected _idling: Idling | undefined;
    protected _issues: Issues | undefined;
    protected _liveShares: LiveShares | undefined;
    protected _me: Me | undefined;
    protected _readings: Readings | undefined;
    protected _speedingIntervals: SpeedingIntervals | undefined;
    protected _tags: Tags | undefined;
    protected _trainingAssignments: TrainingAssignments | undefined;
    protected _trainingCourses: TrainingCourses | undefined;
    protected _trips: Trips | undefined;
    protected _userRoles: UserRoles | undefined;
    protected _users: Users | undefined;
    protected _v1Messages: V1Messages | undefined;
    protected _webhooks: Webhooks | undefined;
    protected _alerts: Alerts | undefined;
    protected _auth: Auth | undefined;
    protected _cameras: Cameras | undefined;
    protected _coaching: Coaching | undefined;
    protected _ifta: Ifta | undefined;
    protected _maintenance: Maintenance | undefined;
    protected _reports: Reports | undefined;
    protected _settings: Settings | undefined;
    protected _tachograph: Tachograph | undefined;

    constructor(_options: SamsaraClient.Options = {}) {
        this._options = {
            ..._options,
            headers: mergeHeaders(
                {
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "@samsarahq/samsara",
                    "X-Fern-SDK-Version": "0.0.175",
                    "User-Agent": "@samsarahq/samsara/0.0.175",
                    "X-Samsara-Version": _options?.version ?? "2025-05-12",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version,
                },
                _options?.headers,
            ),
        };
    }

    public get addresses(): Addresses {
        return (this._addresses ??= new Addresses(this._options));
    }

    public get assets(): Assets {
        return (this._assets ??= new Assets(this._options));
    }

    public get inputs(): Inputs {
        return (this._inputs ??= new Inputs(this._options));
    }

    public get attributes(): Attributes {
        return (this._attributes ??= new Attributes(this._options));
    }

    public get contacts(): Contacts {
        return (this._contacts ??= new Contacts(this._options));
    }

    public get defectTypes(): DefectTypes {
        return (this._defectTypes ??= new DefectTypes(this._options));
    }

    public get defects(): Defects {
        return (this._defects ??= new Defects(this._options));
    }

    public get devices(): Devices {
        return (this._devices ??= new Devices(this._options));
    }

    public get driverTrailerAssignments(): DriverTrailerAssignments {
        return (this._driverTrailerAssignments ??= new DriverTrailerAssignments(this._options));
    }

    public get dvirs(): Dvirs {
        return (this._dvirs ??= new Dvirs(this._options));
    }

    public get carrierProposedAssignments(): CarrierProposedAssignments {
        return (this._carrierProposedAssignments ??= new CarrierProposedAssignments(this._options));
    }

    public get documentTypes(): DocumentTypes {
        return (this._documentTypes ??= new DocumentTypes(this._options));
    }

    public get documents(): Documents {
        return (this._documents ??= new Documents(this._options));
    }

    public get driverVehicleAssignments(): DriverVehicleAssignments {
        return (this._driverVehicleAssignments ??= new DriverVehicleAssignments(this._options));
    }

    public get drivers(): Drivers {
        return (this._drivers ??= new Drivers(this._options));
    }

    public get equipment(): Equipment {
        return (this._equipment ??= new Equipment(this._options));
    }

    public get hos(): Hos {
        return (this._hos ??= new Hos(this._options));
    }

    public get routes(): Routes {
        return (this._routes ??= new Routes(this._options));
    }

    public get safetyEvents(): SafetyEvents {
        return (this._safetyEvents ??= new SafetyEvents(this._options));
    }

    public get trailers(): Trailers {
        return (this._trailers ??= new Trailers(this._options));
    }

    public get vehicles(): Vehicles {
        return (this._vehicles ??= new Vehicles(this._options));
    }

    public get legacy(): Legacy {
        return (this._legacy ??= new Legacy(this._options));
    }

    public get formSubmissions(): FormSubmissions {
        return (this._formSubmissions ??= new FormSubmissions(this._options));
    }

    public get forms(): Forms {
        return (this._forms ??= new Forms(this._options));
    }

    public get fuelPurchases(): FuelPurchases {
        return (this._fuelPurchases ??= new FuelPurchases(this._options));
    }

    public get gateways(): Gateways {
        return (this._gateways ??= new Gateways(this._options));
    }

    public get idling(): Idling {
        return (this._idling ??= new Idling(this._options));
    }

    public get issues(): Issues {
        return (this._issues ??= new Issues(this._options));
    }

    public get liveShares(): LiveShares {
        return (this._liveShares ??= new LiveShares(this._options));
    }

    public get me(): Me {
        return (this._me ??= new Me(this._options));
    }

    public get readings(): Readings {
        return (this._readings ??= new Readings(this._options));
    }

    public get speedingIntervals(): SpeedingIntervals {
        return (this._speedingIntervals ??= new SpeedingIntervals(this._options));
    }

    public get tags(): Tags {
        return (this._tags ??= new Tags(this._options));
    }

    public get trainingAssignments(): TrainingAssignments {
        return (this._trainingAssignments ??= new TrainingAssignments(this._options));
    }

    public get trainingCourses(): TrainingCourses {
        return (this._trainingCourses ??= new TrainingCourses(this._options));
    }

    public get trips(): Trips {
        return (this._trips ??= new Trips(this._options));
    }

    public get userRoles(): UserRoles {
        return (this._userRoles ??= new UserRoles(this._options));
    }

    public get users(): Users {
        return (this._users ??= new Users(this._options));
    }

    public get v1Messages(): V1Messages {
        return (this._v1Messages ??= new V1Messages(this._options));
    }

    public get webhooks(): Webhooks {
        return (this._webhooks ??= new Webhooks(this._options));
    }

    public get alerts(): Alerts {
        return (this._alerts ??= new Alerts(this._options));
    }

    public get auth(): Auth {
        return (this._auth ??= new Auth(this._options));
    }

    public get cameras(): Cameras {
        return (this._cameras ??= new Cameras(this._options));
    }

    public get coaching(): Coaching {
        return (this._coaching ??= new Coaching(this._options));
    }

    public get ifta(): Ifta {
        return (this._ifta ??= new Ifta(this._options));
    }

    public get maintenance(): Maintenance {
        return (this._maintenance ??= new Maintenance(this._options));
    }

    public get reports(): Reports {
        return (this._reports ??= new Reports(this._options));
    }

    public get settings(): Settings {
        return (this._settings ??= new Settings(this._options));
    }

    public get tachograph(): Tachograph {
        return (this._tachograph ??= new Tachograph(this._options));
    }
}
