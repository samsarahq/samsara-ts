/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SamsaraApi from "../index.js";

/**
 * The Asset associated with the alert.
 */
export interface AlertObjectAssetResponseBody {
    /** List of attributes associated with the entity */
    attributes?: SamsaraApi.GoaAttributeTinyResponseBody[];
    /** A map of external ids */
    externalIds?: Record<string, string>;
    /** The ID of the asset. */
    id: string;
    /** The name of the asset. */
    name?: string;
    /** The serial number of the gateway installed on the asset. */
    serial: string;
    /** The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the asset. */
    tags?: SamsaraApi.GoaTagTinyResponseResponseBody[];
    /** The operational context in which the asset interacts with the Samsara system. Examples: Vehicle (eg: truck, bus...), Trailer (eg: dry van, reefer, flatbed...), Powered Equipment (eg: dozer, crane...), Unpowered Equipment (eg: container, dumpster...), or Uncategorized.  Valid values: `uncategorized`, `trailer`, `equipment`, `unpowered`, `vehicle` */
    type: AlertObjectAssetResponseBody.Type;
}

export namespace AlertObjectAssetResponseBody {
    /**
     * The operational context in which the asset interacts with the Samsara system. Examples: Vehicle (eg: truck, bus...), Trailer (eg: dry van, reefer, flatbed...), Powered Equipment (eg: dozer, crane...), Unpowered Equipment (eg: container, dumpster...), or Uncategorized.  Valid values: `uncategorized`, `trailer`, `equipment`, `unpowered`, `vehicle`
     */
    export type Type = "uncategorized" | "trailer" | "equipment" | "unpowered" | "vehicle";
    export const Type = {
        Uncategorized: "uncategorized",
        Trailer: "trailer",
        Equipment: "equipment",
        Unpowered: "unpowered",
        Vehicle: "vehicle",
    } as const;
}
