/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Samsara from "../../../../index.js";

/**
 * @example
 *     {
 *         filterBy: "drivers"
 *     }
 */
export interface DriverVehicleAssignmentsGetRequest {
    /**
     * Option to filter by drivers or vehicles.  Valid values: `drivers`, `vehicles`
     */
    filterBy: Samsara.DriverVehicleAssignmentsGetRequestFilterBy;
    /**
     *  A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).
     */
    startTime?: string;
    /**
     *  An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).
     */
    endTime?: string;
    /**
     *  A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`
     */
    driverIds?: string | string[];
    /**
     * ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: "key:value". For example, "maintenanceId:250020".
     */
    vehicleIds?: string | string[];
    /**
     *  A filter on the data based on this comma-separated list of driver tag IDs. Example: `tagIds=1234,5678`
     */
    driverTagIds?: string;
    /**
     *  A filter on the data based on this comma-separated list of vehicle tag IDs. Example: `tagIds=1234,5678`
     */
    vehicleTagIds?: string;
    /**
     *  If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.
     */
    after?: string;
    /**
     * Specifies which assignment type to filter by.  Valid values: `HOS`, `idCard`, `static`, `faceId`, `tachograph`, `safetyManual`, `RFID`, `trailer`, `external`, `qrCode`
     */
    assignmentType?: Samsara.DriverVehicleAssignmentsGetRequestAssignmentType;
}
