/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SamsaraApi from "../index.js";

export interface DvirGetDvirResponseBody {
    authorSignature: SamsaraApi.AuthorSignatureObjectResponseBody;
    /** IDs of defects registered for the DVIR. */
    defectIds?: string[];
    /** Time when driver created DVIR. UTC timestamp in RFC 3339 format. */
    dvirSubmissionBeginTime: string;
    /** Time when driver submitted the DVIR. UTC timestamp in RFC 3339 format. */
    dvirSubmissionTime: string;
    formattedAddress?: string;
    /** The unique id of the DVIR */
    id: string;
    /** The mechanics notes on the DVIR. */
    mechanicNotes?: string;
    /** The odometer reading in meters. */
    odometerMeters?: number;
    /** The condition of vehicle on which DVIR was done.  Valid values: `unknown`, `safe`, `unsafe`, `resolved` */
    safetyStatus?: DvirGetDvirResponseBody.SafetyStatus;
    secondSignature?: SamsaraApi.AuthorSignatureObjectResponseBody;
    thirdSignature?: SamsaraApi.AuthorSignatureObjectResponseBody;
    trailer?: SamsaraApi.TrailerDvirObjectResponseBody;
    /** Inspection type of the DVIR.  Valid values: `preTrip`, `postTrip`, `mechanic`, `unspecified` */
    type: DvirGetDvirResponseBody.Type;
    /** Time of any DVIR updates. UTC timestamp in RFC 3339 format. */
    updatedAtTime: string;
    vehicle?: SamsaraApi.VehicleDvirObjectResponseBody;
    /** List of walkaround photos */
    walkaroundPhotos?: SamsaraApi.WalkaroundPhotoObjectResponseBody[];
}

export namespace DvirGetDvirResponseBody {
    /**
     * The condition of vehicle on which DVIR was done.  Valid values: `unknown`, `safe`, `unsafe`, `resolved`
     */
    export type SafetyStatus = "unknown" | "safe" | "unsafe" | "resolved";
    export const SafetyStatus = {
        Unknown: "unknown",
        Safe: "safe",
        Unsafe: "unsafe",
        Resolved: "resolved",
    } as const;
    /**
     * Inspection type of the DVIR.  Valid values: `preTrip`, `postTrip`, `mechanic`, `unspecified`
     */
    export type Type = "preTrip" | "postTrip" | "mechanic" | "unspecified";
    export const Type = {
        PreTrip: "preTrip",
        PostTrip: "postTrip",
        Mechanic: "mechanic",
        Unspecified: "unspecified",
    } as const;
}
