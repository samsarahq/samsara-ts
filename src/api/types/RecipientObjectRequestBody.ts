/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * Recipient of an Action. One of userId contactId or roleId needs to be set.
 */
export interface RecipientObjectRequestBody {
    /** The ID of the contact. */
    contactId?: string;
    /** How the user/contact/role should be notified. */
    notificationTypes?: RecipientObjectRequestBody.NotificationTypes.Item[];
    /** The ID of the role. */
    roleId?: string;
    /** The type of recipients  Valid values: `user`, `contact`, `role` */
    type: RecipientObjectRequestBody.Type;
    /** The ID of the user. */
    userId?: string;
}

export namespace RecipientObjectRequestBody {
    export type NotificationTypes = NotificationTypes.Item[];

    export namespace NotificationTypes {
        /**
         * The type of notification.  Valid values: `push`, `sms`, `email`
         */
        export type Item = "push" | "sms" | "email";
        export const Item = {
            Push: "push",
            Sms: "sms",
            Email: "email",
        } as const;
    }

    /**
     * The type of recipients  Valid values: `user`, `contact`, `role`
     */
    export type Type = "user" | "contact" | "role";
    export const Type = {
        User: "user",
        Contact: "contact",
        Role: "role",
    } as const;
}
